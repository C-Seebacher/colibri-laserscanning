00000000 F2000001 00000043 00000016 00000000 00000000 00000000 22200000  Lade Wert 22 in Variable 0x43 (wird später gesendet)
00000000 20001001 00000006 73746174 0D0A0000 00000000 00000000 22200001  Schreibe 6 Bytes: „stat<CRLF>“
00001000 20001002 00000002 00000013 00000000 00000000 00000000 22201002  Lese und speichere 2 Bytes (erwartet: „st“)
00001000 F1010101 00000003 00000013 73740000 00000000 00000000 22201003  Prüfe Antwort auf „st“ 
00001000 20001000 FFFFFFFF 00000000 00000000 00000000 00000000 22201004  Fehlerbehandlung (hier stellvetretend nur Flush und Programmende)
00008000 F00F100F 00000000 00000000 00000000 00000000 00000000 FFFF1005  
00001000 20001000 00000003 00000000 00000000 00000000 00000000 22201006  Lese 3 Bytes (erwartet: „at,“)
00001000 200010A2 00000004 00000024 00000000 00000000 00000000 22201007  Lese und konvertiere Hex-Wert mit Prefix (erwartet: 0xD0000000)
00001000 20001000 FFFFFFFF 00000000 00000000 00000000 00000000 22201008  Flush FIFO
00001000 20001001 00000005 64656670 2C000000 00000000 00000000 22200009  Schreibe 5 Bytes: „defp,“
00001000 20001023 00000004 00000043 00000000 00000000 00000000 2220100A  Konvertiere und schreibe Wert aus Variable 0x43 (Wert = 22)
00001000 20001001 00000002 0D0A0000 00000000 00000000 00000000 2220000B  Schreibe 2 Bytes: „<CRLF>“
00001000 20001002 00000003 00000014 00000000 00000000 00000000 2220100C  Lese und speichere 3 Bytes (erwartet: „def“)
00001000 F1010101 00000003 00000014 64656600 00000000 00000000 2220100D  Prüfe Antwort auf „def“
00001000 20001000 FFFFFFFF 00000000 00000000 00000000 00000000 2220100E  Fehlerbehandlung (hier stellvetretend nur Flush und Programmende)
00008000 F00F100F 00000000 00000000 00000000 00000000 00000000 FFFF100F  
00001000 20001000 00000002 00000000 00000000 00000000 00000000 22201010  Lese 2 Bytes (erwartet: „p,“)
00001000 20001022 00000004 00000025 00000000 00000000 00000000 22201011  Lese und konvertiere Dezimal-Wert (erwartet: „22“)
00001000 200010E2 00000004 00000026 00000000 00000000 00000000 22201012  Lese und konvertiere Float-Wert (erwartet: „1.000000e+01“)
00001000 20001000 FFFFFFFF 00000000 00000000 00000000 00000000 22201013  Flush FIFO
00001000 F2001000 00000024 00000000 00000000 00000000 00000000 F2201014  Kontrollausgabe der eingelesenen Werte
00000000 F2001000 00000025 00000000 00000000 00000000 00000000 F2201015  Kontrollausgabe der eingelesenen Werte
00000000 F2001000 00000026 00000000 00000000 00000000 00000000 F2201016  Kontrollausgabe der eingelesenen Werte
00008000 F00F100F 00000000 00000000 00000000 00000000 00000000 FFFF1017  ende